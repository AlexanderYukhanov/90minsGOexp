// Code generated by go-swagger; DO NOT EDIT.

package trainers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListTrainerAppointmentsHandlerFunc turns a function with the right signature into a list trainer appointments handler
type ListTrainerAppointmentsHandlerFunc func(ListTrainerAppointmentsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListTrainerAppointmentsHandlerFunc) Handle(params ListTrainerAppointmentsParams) middleware.Responder {
	return fn(params)
}

// ListTrainerAppointmentsHandler interface for that can handle valid list trainer appointments params
type ListTrainerAppointmentsHandler interface {
	Handle(ListTrainerAppointmentsParams) middleware.Responder
}

// NewListTrainerAppointments creates a new http.Handler for the list trainer appointments operation
func NewListTrainerAppointments(ctx *middleware.Context, handler ListTrainerAppointmentsHandler) *ListTrainerAppointments {
	return &ListTrainerAppointments{Context: ctx, Handler: handler}
}

/*ListTrainerAppointments swagger:route GET /trainers/appointments trainers listTrainerAppointments

List trainer's appointments

*/
type ListTrainerAppointments struct {
	Context *middleware.Context
	Handler ListTrainerAppointmentsHandler
}

func (o *ListTrainerAppointments) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListTrainerAppointmentsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
