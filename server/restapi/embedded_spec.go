// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "An experimental server",
    "title": "An experimental server",
    "contact": {
      "email": "a.yukhanov@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/trainers/appointments": {
      "get": {
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "trainers"
        ],
        "summary": "List trainer's appointments",
        "operationId": "listTrainerAppointments",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Provided by API GW after auth",
            "name": "trainerid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "starts-at",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "ends-at",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of appointments",
            "schema": {
              "$ref": "#/definitions/TrainerAppointments"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/appointments": {
      "post": {
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Create new appointment",
        "operationId": "createAppointment",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Provided by API GW after auth",
            "name": "userid",
            "in": "header",
            "required": true
          },
          {
            "name": "Appointment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAppointment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserAppointment"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/trainers/{trainer-id}/availableTimes": {
      "get": {
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List available time slots for a trainer",
        "operationId": "listAvailableTimesForTrainer",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "trainer-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "starts-at",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "ends-at",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of available time slots",
            "schema": {
              "$ref": "#/definitions/AvailableSlots"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Trainer not found"
          }
        }
      }
    }
  },
  "definitions": {
    "AvailableSlot": {
      "type": "object",
      "properties": {
        "ends-at": {
          "type": "string",
          "format": "date-time"
        },
        "starts-at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AvailableSlots": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AvailableSlot"
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Attributes of an error. Specific to the error code",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "devmessage": {
          "description": "A dev message describing the error. Not intented for UI",
          "type": "string"
        }
      }
    },
    "TrainerAppointment": {
      "type": "object",
      "properties": {
        "ends-at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "starts-at": {
          "type": "string",
          "format": "date-time"
        },
        "user-id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TrainerAppointments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TrainerAppointment"
      }
    },
    "UserAppointment": {
      "type": "object",
      "properties": {
        "ends-at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "An appointment dentifier. Ignored in put request",
          "type": "string",
          "format": "uuid"
        },
        "starts-at": {
          "type": "string",
          "format": "date-time"
        },
        "trainer-id": {
          "type": "string",
          "format": "uuid"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Users API",
      "name": "users"
    },
    {
      "description": "Trainers API",
      "name": "trainers"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "An experimental server",
    "title": "An experimental server",
    "contact": {
      "email": "a.yukhanov@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/trainers/appointments": {
      "get": {
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "trainers"
        ],
        "summary": "List trainer's appointments",
        "operationId": "listTrainerAppointments",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Provided by API GW after auth",
            "name": "trainerid",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "starts-at",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "ends-at",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of appointments",
            "schema": {
              "$ref": "#/definitions/TrainerAppointments"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/appointments": {
      "post": {
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Create new appointment",
        "operationId": "createAppointment",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Provided by API GW after auth",
            "name": "userid",
            "in": "header",
            "required": true
          },
          {
            "name": "Appointment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAppointment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserAppointment"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/trainers/{trainer-id}/availableTimes": {
      "get": {
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "List available time slots for a trainer",
        "operationId": "listAvailableTimesForTrainer",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "trainer-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "starts-at",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "ends-at",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of available time slots",
            "schema": {
              "$ref": "#/definitions/AvailableSlots"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Trainer not found"
          }
        }
      }
    }
  },
  "definitions": {
    "AvailableSlot": {
      "type": "object",
      "properties": {
        "ends-at": {
          "type": "string",
          "format": "date-time"
        },
        "starts-at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AvailableSlots": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AvailableSlot"
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Attributes of an error. Specific to the error code",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "devmessage": {
          "description": "A dev message describing the error. Not intented for UI",
          "type": "string"
        }
      }
    },
    "TrainerAppointment": {
      "type": "object",
      "properties": {
        "ends-at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "starts-at": {
          "type": "string",
          "format": "date-time"
        },
        "user-id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TrainerAppointments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TrainerAppointment"
      }
    },
    "UserAppointment": {
      "type": "object",
      "properties": {
        "ends-at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "An appointment dentifier. Ignored in put request",
          "type": "string",
          "format": "uuid"
        },
        "starts-at": {
          "type": "string",
          "format": "date-time"
        },
        "trainer-id": {
          "type": "string",
          "format": "uuid"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Users API",
      "name": "users"
    },
    {
      "description": "Trainers API",
      "name": "trainers"
    }
  ]
}`))
}
