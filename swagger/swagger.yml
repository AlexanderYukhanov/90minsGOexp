swagger: "2.0"
info:
  description: "An experimental server"
  version: "1.0.0"
  title: "An experimental server"
  termsOfService: ""
  contact:
    email: "a.yukhanov@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/v1"
tags:
- name: "users"
  description: "Users API"
- name: "trainers"
  description: "Trainers API"
schemes:
- "http"
paths:
  /users/trainers/{trainer-id}/availableTimes:
    get:
      tags:
      - "users"
      summary: "List available time slots for a trainer"
      description: ""
      operationId: "listAvailableTimesForTrainer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "trainer-id"
        type: "string"
        format: "uuid"
        required: true
      - in: "query"
        name: "starts-at"
        type: "string"
        format: "date-time"
        required: true
      - in: "query"
        name: "ends-at"
        type: "string"
        format: "date-time"
        required: true
      responses:
        "200":
          description: "List of available time slots"
          schema:
            $ref: "#/definitions/AvailableSlots"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "Unauthorized"
        "404":
          description: "Trainer not found"
      security: []
  /users/appointments:
    post:
      tags:
      - "users"
      summary: "Create new appointment"
      description: ""
      operationId: "createAppointment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "userid"
        description: "Provided by API GW after auth"
        type: "string"
        format: "uuid"
        required: true
      - in: "body"
        name: "Appointment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/UserAppointment"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/UserAppointment"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "Unauthorized"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        "429":
          description: "Too many requests"
          schema:
            $ref: "#/definitions/Error"
      security: []
  /trainers/appointments:
    get:
      tags:
      - "trainers"
      summary: "List trainer's appointments"
      description: ""
      operationId: "listTrainerAppointments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "trainerid"
        description: "Provided by API GW after auth"
        type: "string"
        format: "uuid"
        required: true
      - in: "query"
        name: "starts-at"
        type: "string"
        format: "date-time"
        required: true
      - in: "query"
        name: "ends-at"
        type: "string"
        format: "date-time"
        required: true
      responses:
        "200":
          description: "List of appointments"
          schema:
            $ref: "#/definitions/TrainerAppointments"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "Unauthorized"
      security: []
definitions:
  AvailableSlots:
    type: "array"
    items:
      $ref: "#/definitions/AvailableSlot"
  AvailableSlot:
    type: "object"
    properties:
      starts-at:
        type: "string"
        format: "date-time"
      ends-at:
        type: "string"
        format: "date-time"
  UserAppointment:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "An appointment dentifier. Ignored in put request"
      trainer-id:
        type: "string"
        format: "uuid"
      starts-at:
        type: "string"
        format: "date-time"
      ends-at:
        type: "string"
        format: "date-time"
  TrainerAppointments:
    type: "array"
    items:
      $ref: "#/definitions/TrainerAppointment"
  TrainerAppointment:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      user-id:
        type: "string"
        format: "uuid"
      starts-at:
        type: "string"
        format: "date-time"
      ends-at:
        type: "string"
        format: "date-time"
  Error:
    type: "object"
    properties:
      code:
        type: "string"
        description: "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
      devmessage:
        type: "string"
        description: "A dev message describing the error. Not intented for UI"
      attributes:
        type: "array"
        description: "Attributes of an error. Specific to the error code"
        items:
          type: "string"
      details:
        type: "array"
        description: "A list of additional details about the error."
        items:
          $ref: "#/definitions/Error"